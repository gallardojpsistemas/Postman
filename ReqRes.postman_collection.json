{
	"info": {
		"_postman_id": "7245d6cf-e9e2-4517-a09d-0a9745cfcdae",
		"name": "ReqRes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19740868"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "Get Users (Test Simple)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the whole response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.page).to.eql(2);\r",
									"    pm.expect(jsonData.per_page).to.eql(6);\r",
									"    pm.expect(jsonData.total).to.eql(12);\r",
									"    pm.expect(jsonData.total_pages).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users?page=2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single User (Test Simple)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate the whole response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.page).to.eql(2);\r",
									"    pm.expect(jsonData.per_page).to.eql(6);\r",
									"    pm.expect(jsonData.total).to.eql(12);\r",
									"    pm.expect(jsonData.total_pages).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users?page=2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users (Test Avanzado)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Validate the whole response\", function () {\r",
									"    pm.expect(jsonData.page).to.eql(2);\r",
									"    pm.expect(jsonData.per_page).to.eql(6);\r",
									"    pm.expect(jsonData.total).to.eql(12);\r",
									"    pm.expect(jsonData.total_pages).to.eql(2);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate correct user\", () => {\r",
									"    \r",
									"    var user = jsonData.data.find(x => x.id == 11)\r",
									"    pm.expect(user).not.to.be.undefined\r",
									"    pm.expect(user.email).eql(\"george.edwards@reqres.in\")\r",
									"    pm.expect(user.avatar).contains(\"11-image.jpg\")\r",
									"    console.log(user)\r",
									"\r",
									"})\r",
									"\r",
									"pm.test(\"Validate incorrect user\", () => {\r",
									"    \r",
									"    var user = jsonData.data.find(x => x.id == 50)\r",
									"    pm.expect(user).to.be.undefined\r",
									"    console.log(user)\r",
									"\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/users?page=2",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (Harcodeado)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User (Variables)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{nombre}}\",\r\n    \"job\": \"{{trabajo}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Registers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"console.info(\"Console Info\");\r",
									"console.warn(\"Console Warning\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/api/register",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"register"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}